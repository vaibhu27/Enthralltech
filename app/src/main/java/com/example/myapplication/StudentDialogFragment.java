package com.example.myapplication;

import android.app.Dialog;
import android.content.Context;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.view.Window;
import android.widget.Button;
import android.widget.EditText;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.DialogFragment;

import com.example.myapplication.Data.model.model.Student;
import com.example.myapplication.Data.model.repository.StudentRepository;
import com.example.myapplication.R;

public class StudentDialogFragment extends DialogFragment {

    private EditText etName, etAddress, etMobile, etDob;
    private RadioGroup radioGroupGender;
    private RadioButton radioButtonMale, radioButtonFemale;
    private Button btnSave;

    private Context context;
    private StudentRepository studentRepository;
    private boolean isEditMode = false;
    private Student studentToUpdate;

    public StudentDialogFragment() {
        // Required empty public constructor
    }

    public static StudentDialogFragment newInstance() {
        return new StudentDialogFragment();
    }

    @Override
    public void onAttach(@NonNull Context context) {
        super.onAttach(context);
        this.context = context;
        studentRepository = new StudentRepository(context);
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        return inflater.inflate(R.layout.fragment_student_dialog, container, false);
    }

    @Override
    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);

        etName = view.findViewById(R.id.etName);
        etAddress = view.findViewById(R.id.etAddress);
        etMobile = view.findViewById(R.id.etMobile);
        etDob = view.findViewById(R.id.etDob);
        radioGroupGender = view.findViewById(R.id.radioGroupGender);
        radioButtonMale = view.findViewById(R.id.radioButtonMale);
        radioButtonFemale = view.findViewById(R.id.radioButtonFemale);
        btnSave = view.findViewById(R.id.btnSave);

        // Check if editing existing student (passed via arguments)
        if (getArguments() != null && getArguments().containsKey("student")) {
            isEditMode = true;
            studentToUpdate = getArguments().getParcelable("student");
            fillFormData();
        }

        btnSave.setOnClickListener(v -> saveStudent());
    }

    private void fillFormData() {
        etName.setText(studentToUpdate.getName());
        etAddress.setText(studentToUpdate.getAddress());
        etMobile.setText(studentToUpdate.getMobileNumber());
        etDob.setText(studentToUpdate.getDob());

        if (studentToUpdate.getGender().equals("Male")) {
            radioButtonMale.setChecked(true);
        } else {
            radioButtonFemale.setChecked(true);
        }
    }

    private void saveStudent() {
        String name = etName.getText().toString().trim();
        String address = etAddress.getText().toString().trim();
        String mobile = etMobile.getText().toString().trim();
        String dob = etDob.getText().toString().trim();
        String gender = radioButtonMale.isChecked() ? "Male" : "Female";

        if (!validateInputs(name, address, mobile, dob, gender)) {
            return;
        }

        // Check if editing existing student or adding new one
        if (isEditMode && studentToUpdate != null) {
            // Editing existing student
            studentToUpdate.setName(name);
            studentToUpdate.setAddress(address);
            studentToUpdate.setMobileNumber(mobile);
            studentToUpdate.setDob(dob);
            studentToUpdate.setGender(gender);

            studentRepository.updateStudent(studentToUpdate);
            Toast.makeText(context, "Student updated", Toast.LENGTH_SHORT).show();
        } else {
            // Adding new student
            Student newStudent = new Student(
                    -1, // Placeholder for ID, will be generated by SQLite
                    name,
                    address,
                    mobile,
                    dob,
                    gender
            );

            long id = studentRepository.addStudent(newStudent);
            if (id != -1) {
                Toast.makeText(context, "Student added", Toast.LENGTH_SHORT).show();
            } else {
                Toast.makeText(context, "Failed to add student", Toast.LENGTH_SHORT).show();
            }
        }

        dismiss();
    }

    @NonNull
    @Override
    public Dialog onCreateDialog(Bundle savedInstanceState) {
        Dialog dialog = super.onCreateDialog(savedInstanceState);
        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
        return dialog;
    }

    private boolean validateInputs(String name, String address, String mobile, String dob, String gender) {
        // Implement your validation logic here
        // For simplicity, just checking if fields are not empty
        return !name.isEmpty() && !address.isEmpty() && !mobile.isEmpty() && !dob.isEmpty();
    }
}
